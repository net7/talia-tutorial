<style>
#flexip, #flexip-loaded {width: 500px;height: 500px;position:absolute;right:5px;top:133px;border:1px solid black;}
</style>

<% images = @source.files_of_type TaliaCore::DataTypes::IipData, TaliaCore::DataTypes::ImageData %>
<% if images.count > 0 %>
 <div id="flexip" style=""></div>
 <h3 class="toggle closed">Images</h3>
<div>
<%   images.each do |image| %>
  <%= image_tag source_data_url(image), :alt => image.location, :title => image.location %>
  <% 
     # TODO: crude, find a better way to get talia_file pseudo_id
     # (I already have all the talia files in memory, I should remember which one of them this belongs to. 
  %>
  <a href="<%= TaliaFile.find(image.source_id).uri.to_s %>" class="flexip-toggle">
    <%= t "Toggle flexip" %></a><br/>
<%   end %>
</div>
<% end %>

<% files = @source.files_by_type %>
<% files.delete 'TaliaCore::DataTypes::IipData' %>
<% files.delete 'TaliaCore::DataTypes::ImageData' %>
<% data_records = [] %>
<% files.each_value {|type| type.each {|data_record| data_records << data_record}} %>

<% if data_records.size > 0 %>
  <h3 class="toggle">Data Records</h3>
  <div>
    <%= render :partial => 'data_list', :locals => {:records => data_records} %>
  </div>
<% end %>

<% if files['TaliaCore::DataTypes::XmlData'] %>
  <h3 class="toggle">Text</h3>
  <div>
    <% for data_record in files['TaliaCore::DataTypes::XmlData'] %>
      <% element_uri = (@source.uri + "/data#{data_record.id}").to_s %>
      <% if((ncount = Swicky::Notebook.annotation_list_for_url(element_uri).size) > 0)%>
        <h2>This element has <%= ncount %> annotations</h2>
      <% end %>
      <%= thctag(element_uri, data_record.content_string) %>
    <% end %>
  </div>
<% elsif !@source[N::DCNS.description].empty? %>
  <h3 class="toggle">Description</h3>
  <div>
    <%= @source[N::DCNS.description].values_with_lang(I18n.locale.to_s).first %>
  </div>
<% end %>
